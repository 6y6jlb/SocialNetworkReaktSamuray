{"version":3,"sources":["images/emptyUser.png","components/MainWrapper/Users/UserPage.module.css","components/MainWrapper/Users/User/User.module.css","components/common/Paginator/Paginator.module.css","components/MainWrapper/Users/User/User.tsx","components/common/Paginator/Paginator.tsx","components/MainWrapper/Users/UsersPage.tsx","components/MainWrapper/Users/UserPage.container.tsx"],"names":["module","exports","User","React","memo","user","emptyPhoto","isRequestSendUsersId","followCallBack","unFollowCallBack","className","style","photoZone","to","PATH","PROFILE","id","src","photos","small","alt","name","followed","disabled","some","onClick","description","info","userStatus","status","location","country","city","Paginator","totalCount","portionSize","currentPage","onPageChanged","portionNumber","changePortionNumber","pagesCount","Math","ceil","leftPortionPageNumber","rightPortionPageNumber","pages","i","mappedPages","filter","p","map","activeNumber","normalNumber","left","right","Users","props","users","pageSize","mappedUsers","usersFrame","UserPageAPIComponent","pageNumber","changeCurrentPage","getUsers","this","isFetching","Preloader","Component","compose","connect","state","usersReducer","followUserTC","unFollowUserTC","actionsUsers","changeCurrentPageActionCreator","setPortionNumber","getUsersTC"],"mappings":"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","file":"static/js/7.c6df5722.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emptyUser.80e4c874.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersFrame\":\"UserPage_usersFrame__2Bctv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1RtLy\",\"description\":\"User_description__3LRNr\",\"info\":\"User_info__3abGK\",\"name\":\"User_name__1rD4V\",\"userStatus\":\"User_userStatus__3uI7y\",\"location\":\"User_location__gFRnx\",\"country\":\"User_country__1I3IZ\",\"city\":\"User_city__1Vwxc\",\"photoZone\":\"User_photoZone__1_w2c\",\"followed\":\"User_followed__19lDJ\",\"activeNumber\":\"User_activeNumber__3LD8v\",\"normalNumber\":\"User_normalNumber__mz09u\",\"addUsersButton\":\"User_addUsersButton__2-qDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__2VvsA\",\"activeNumber\":\"Paginator_activeNumber__2tzg6\",\"normalNumber\":\"Paginator_normalNumber__3RUG9\"};","import React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../common/routes/Routes\";\r\nimport {UserType} from \"../../../../Redux/usersReducer\";\r\n\r\ntype UserPropsType = {\r\n    user:UserType\r\n    emptyPhoto:string\r\n    isRequestSendUsersId:number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n}\r\n\r\nconst User:React.FC<UserPropsType> = React.memo(({user,emptyPhoto,isRequestSendUsersId,followCallBack,unFollowCallBack})=>{\r\n    return (\r\n        <div className={ style.user } key={ user.id }>\r\n            <div className={ style.photoZone }>\r\n                <NavLink  to={ `${ PATH.PROFILE + user.id }` }><img src={ user.photos.small || emptyPhoto }\r\n                                                                    alt={ `${ user.name }, ${ user.id }` }/></NavLink>\r\n                { user.followed\r\n                    ? <button disabled={isRequestSendUsersId.some(id=>id===user.id)} className={ style.followed } onClick={() => {\r\n                        unFollowCallBack(user.id)\r\n                        /*\r\n                        props.sendRequestFromFollowUnFollow(user.id,true)\r\n                        UsersAPI.unFollowUser(user.id)\r\n                            .then ( response => {\r\n                                if (response.data.resultCode === 0) {\r\n                                    followCallBack ( user.id )\r\n                                    props.sendRequestFromFollowUnFollow(user.id,false)\r\n                                }\r\n                            } )\r\n                    */} }\r\n                    >unFollow</button>\r\n                    : <button disabled={isRequestSendUsersId.some(id=>id===user.id)} className={ style.followed }\r\n                              onClick={ () => {\r\n                                  followCallBack(user.id)\r\n                                  /*\r\n                                  props.sendRequestFromFollowUnFollow(user.id,true)\r\n                                  UsersAPI.followUser(user.id)\r\n                                      .then ( response => {\r\n                                          if (response.data.resultCode === 0) {\r\n                                              unFollowCallBack ( user.id )\r\n                                              props.sendRequestFromFollowUnFollow(user.id,false)\r\n                                          }\r\n                                      } )\r\n                              */} }>follow</button> }\r\n            </div>\r\n            <div className={ style.description }>\r\n                <div className={ style.info }>\r\n                    <div className={ style.userStatus }>{ user.status || 'Человечный человек' }</div>\r\n                    <div className={ style.name }>{ user.name }</div>\r\n                </div>\r\n                <div className={ style.location }>\r\n                    <span className={ style.country }>\"user.location.country\"</span>\r\n                    <span className={ style.city }>\"user.location.city\"</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default User;","import React, {useState} from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\ntype PropsType = {\r\n    totalCount: number\r\n    currentPage: number\r\n    portionSize?: number\r\n    portionNumber: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n\r\n}\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = React.memo ( ({\r\n                                                         totalCount,\r\n                                                         portionSize = 10,\r\n                                                         currentPage,\r\n                                                         onPageChanged,\r\n                                                         portionNumber,\r\n                                                         changePortionNumber\r\n                                                     }) => {\r\n\r\n    const pagesCount = Math.ceil ( totalCount / portionSize ) // pages:number\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    let pages: number[] = [];\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n        pages = [...pages, i]\r\n    }\r\n\r\n\r\n    const filteredPages = pages.filter ( p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n    const mappedPages = filteredPages.map ( (p, i) => {\r\n        return (\r\n            currentPage === p\r\n            ?<span key={ i }\r\n              className={style.activeNumber}>{ p }</span>\r\n            :<span key={ i }\r\n                   onClick={ () => onPageChanged ( p ) }\r\n                   className={style.normalNumber }>{ p }</span>\r\n        )\r\n    })\r\n\r\n    const left = portionNumber > 1 && <span onClick={ () => changePortionNumber ( portionNumber - 1 ) }\r\n                                            className={ style.normalNumber }>{ '<<<' }</span>\r\n    const right = pagesCount > portionNumber && <span onClick={ () => changePortionNumber ( portionNumber + 1 ) }\r\n                                                      className={ style.normalNumber }>{ '>>>' }</span>\r\n    return (\r\n        <>\r\n            <div className={ style.pages }>\r\n                { left }\r\n                { mappedPages }\r\n                { right }\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n} )\r\nexport default Paginator;","import React from \"react\";\r\nimport style from './UserPage.module.css'\r\nimport {UserType} from \"../../../Redux/usersReducer\";\r\nimport User from \"./User/User\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    emptyPhoto: string\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    portionNumber: number\r\n    currentPage: number\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n\r\n}\r\n\r\nconst Users: React.FC<UsersPagePropsType> = React.memo ( (props) => {\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        pageSize,\r\n        followCallBack,\r\n        unFollowCallBack,\r\n        onPageChanged,\r\n        emptyPhoto,\r\n        isRequestSendUsersId,\r\n        currentPage,\r\n        portionNumber,\r\n        changePortionNumber\r\n    } = props;\r\n\r\n\r\n    const mappedUsers = users.map ( user => {\r\n        return <User user={ user }\r\n                     emptyPhoto={ emptyPhoto }\r\n                     isRequestSendUsersId={ isRequestSendUsersId }\r\n                     followCallBack={ followCallBack }\r\n                     unFollowCallBack={ unFollowCallBack }/>\r\n    } ) //users items mapped for page\r\n\r\n\r\n    return (<div className={ style.usersFrame }>\r\n            <Paginator changePortionNumber={ changePortionNumber } portionNumber={ portionNumber }\r\n                       totalCount={ totalCount } currentPage={ currentPage } onPageChanged={ onPageChanged }/>\r\n            { mappedUsers }\r\n        </div>\r\n    );\r\n} )\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {\r\n    actionsUsers,\r\n    followUserTC,\r\n    getUsersTC,\r\n    InitialStateUsersType,\r\n    unFollowUserTC,\r\n    UserType\r\n} from \"../../../Redux/usersReducer\";\r\nimport Users from \"./UsersPage\";\r\nimport emptyPhoto from '../../../images/emptyUser.png'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersPageAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    portionNumber:number\r\n    isRequestSendUsersId: number[]\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    changeCurrentPage: (currentPage: number) => void\r\n    changePortionNumber: (portion: number) => void\r\n    getUsers: (pageSize: number, currentPage: number) => void\r\n}\r\nexport type UserResponseType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string | null, large: string | null }\r\n    followed: boolean\r\n}\r\nexport type UsersResponseType = {\r\n    items: Array<UserResponseType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n    totalCount: number,\r\n    pageSize: number,\r\n    portionNumber: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isRequestSendUsersId: number[]\r\n}\r\n\r\nclass UserPageAPIComponent extends React.Component<UsersPageAPIComponentPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers ( this.props.pageSize, this.props.currentPage )\r\n    }//axios request with fetching and setUsers\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeCurrentPage ( pageNumber )\r\n        this.props.getUsers ( this.props.pageSize, pageNumber )\r\n\r\n    } //axios request with fetching and setUsers\r\n\r\n    render() {\r\n        return <>{ this.props.isFetching\r\n            ? <Preloader/>\r\n            : <Users emptyPhoto={ emptyPhoto }\r\n                     users={ this.props.users }\r\n                     totalCount={ this.props.totalCount }\r\n                     followCallBack={ this.props.followCallBack }\r\n                     unFollowCallBack={ this.props.unFollowCallBack }\r\n                     onPageChanged={ this.onPageChanged }\r\n                     currentPage={ this.props.currentPage }\r\n                     pageSize={ this.props.pageSize }\r\n                     isRequestSendUsersId={ this.props.isRequestSendUsersId }\r\n                     changePortionNumber={this.props.changePortionNumber}\r\n                     portionNumber={this.props.portionNumber}\r\n            /> }</>\r\n    }\r\n} //class container for USERS\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        totalCount: state.usersReducer.totalCount,\r\n        pageSize: state.usersReducer.pageSize,\r\n        portionNumber:state.usersReducer.portionNumber,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        isRequestSendUsersId: state.usersReducer.isRequestSendUsersId\r\n\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType> (\r\n    connect ( mapStateToProps, {\r\n        followCallBack: followUserTC,\r\n        unFollowCallBack: unFollowUserTC,\r\n        changeCurrentPage: actionsUsers.changeCurrentPageActionCreator,\r\n        changePortionNumber:actionsUsers.setPortionNumber,\r\n        getUsers: getUsersTC\r\n    } ),\r\n    //withAuthRedirect\r\n)(UserPageAPIComponent)"],"sourceRoot":""}