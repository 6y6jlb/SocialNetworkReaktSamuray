{"version":3,"sources":["images/emptyUser.png","components/MainWrapper/Users/UserPage.module.css","components/MainWrapper/Users/User/User.module.css","components/MainWrapper/Users/User/User.tsx","components/MainWrapper/Users/UsersPage.tsx","components/MainWrapper/Users/UserPage.container.tsx"],"names":["module","exports","User","React","memo","user","emptyPhoto","isRequestSendUsersId","followCallBack","unFollowCallBack","className","style","photoZone","to","PATH","PROFILE","id","src","photos","small","alt","name","followed","disabled","some","onClick","description","info","userStatus","status","location","country","city","Users","props","users","totalCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pages","i","mappedUsers","map","mappedPages","p","activeNumber","normalNumber","usersFrame","UserPageAPIComponent","pageNumber","changeCurrentPage","getUsers","this","isFetching","Preloader","Component","compose","connect","state","usersReducer","followUserTC","unFollowUserTC","actionsUsers","changeCurrentPageActionCreator","getUsersTC"],"mappings":"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","file":"static/js/7.6a464c20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/emptyUser.80e4c874.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersFrame\":\"UserPage_usersFrame__2Bctv\",\"pages\":\"UserPage_pages__RmKxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1RtLy\",\"description\":\"User_description__3LRNr\",\"info\":\"User_info__3abGK\",\"name\":\"User_name__1rD4V\",\"userStatus\":\"User_userStatus__3uI7y\",\"location\":\"User_location__gFRnx\",\"country\":\"User_country__1I3IZ\",\"city\":\"User_city__1Vwxc\",\"photoZone\":\"User_photoZone__1_w2c\",\"followed\":\"User_followed__19lDJ\",\"activeNumber\":\"User_activeNumber__3LD8v\",\"normalNumber\":\"User_normalNumber__mz09u\",\"addUsersButton\":\"User_addUsersButton__2-qDD\"};","import React from \"react\";\r\nimport style from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../common/routes/Routes\";\r\nimport {UserType} from \"../../../../Redux/usersReducer\";\r\n\r\ntype UserPropsType = {\r\n    user:UserType\r\n    emptyPhoto:string\r\n    isRequestSendUsersId:number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n}\r\n\r\nconst User:React.FC<UserPropsType> = React.memo(({user,emptyPhoto,isRequestSendUsersId,followCallBack,unFollowCallBack})=>{\r\n    return (\r\n        <div className={ style.user } key={ user.id }>\r\n            <div className={ style.photoZone }>\r\n                <NavLink  to={ `${ PATH.PROFILE + user.id }` }><img src={ user.photos.small || emptyPhoto }\r\n                                                                    alt={ `${ user.name }, ${ user.id }` }/></NavLink>\r\n                { user.followed\r\n                    ? <button disabled={isRequestSendUsersId.some(id=>id===user.id)} className={ style.followed } onClick={() => {\r\n                        unFollowCallBack(user.id)\r\n                        /*\r\n                        props.sendRequestFromFollowUnFollow(user.id,true)\r\n                        UsersAPI.unFollowUser(user.id)\r\n                            .then ( response => {\r\n                                if (response.data.resultCode === 0) {\r\n                                    followCallBack ( user.id )\r\n                                    props.sendRequestFromFollowUnFollow(user.id,false)\r\n                                }\r\n                            } )\r\n                    */} }\r\n                    >unFollow</button>\r\n                    : <button disabled={isRequestSendUsersId.some(id=>id===user.id)} className={ style.followed }\r\n                              onClick={ () => {\r\n                                  followCallBack(user.id)\r\n                                  /*\r\n                                  props.sendRequestFromFollowUnFollow(user.id,true)\r\n                                  UsersAPI.followUser(user.id)\r\n                                      .then ( response => {\r\n                                          if (response.data.resultCode === 0) {\r\n                                              unFollowCallBack ( user.id )\r\n                                              props.sendRequestFromFollowUnFollow(user.id,false)\r\n                                          }\r\n                                      } )\r\n                              */} }>follow</button> }\r\n            </div>\r\n            <div className={ style.description }>\r\n                <div className={ style.info }>\r\n                    <div className={ style.userStatus }>{ user.status || 'Человечный человек' }</div>\r\n                    <div className={ style.name }>{ user.name }</div>\r\n                </div>\r\n                <div className={ style.location }>\r\n                    <span className={ style.country }>\"user.location.country\"</span>\r\n                    <span className={ style.city }>\"user.location.city\"</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default User;","import React from \"react\";\r\nimport style from './UserPage.module.css'\r\nimport {UserType} from \"../../../Redux/usersReducer\";\r\nimport User from \"./User/User\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    emptyPhoto: string\r\n    users: UserType[]\r\n    totalCount: number,\r\n    pageSize: number\r\n    currentPage: number,\r\n    isRequestSendUsersId: number []\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n\r\n}\r\n\r\nconst Users: React.FC<UsersPagePropsType> = React.memo ( (props) => {\r\n\r\n    const {\r\n        users,\r\n        totalCount,\r\n        pageSize,\r\n        followCallBack,\r\n        unFollowCallBack,\r\n        onPageChanged,\r\n        emptyPhoto,\r\n        isRequestSendUsersId,\r\n        currentPage\r\n    } = props;\r\n\r\n\r\n    const pagesCount = Math.ceil ( totalCount / pageSize ) // pages:number\r\n    let pages: number[] = [];\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n        pages = [...pages, i]\r\n    }\r\n\r\n    const mappedUsers = users.map ( user => {\r\n        return <User user={ user }\r\n                     emptyPhoto={ emptyPhoto }\r\n                     isRequestSendUsersId={ isRequestSendUsersId }\r\n                     followCallBack={ followCallBack }\r\n                     unFollowCallBack={ unFollowCallBack }/>\r\n    } ) //users items mapped for page\r\n\r\n    const mappedPages = pages.map ( (p, i) => <span key={ i } onClick={ () => onPageChanged ( p ) }\r\n                                                    className={ currentPage === p ? style.activeNumber : style.normalNumber }>{ p }</span>\r\n    )\r\n\r\n    return (<div className={ style.usersFrame }>\r\n            <div className={ style.pages }>{ mappedPages }</div>\r\n            { mappedUsers }\r\n        </div>\r\n    );\r\n} )\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {\r\n    actionsUsers,\r\n    followUserTC,\r\n    getUsersTC,\r\n    InitialStateUsersType,\r\n    unFollowUserTC,\r\n    UserType\r\n} from \"../../../Redux/usersReducer\";\r\nimport Users from \"./UsersPage\";\r\nimport emptyPhoto from '../../../images/emptyUser.png'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype UsersPageAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isRequestSendUsersId: number[]\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    changeCurrentPage: (currentPage: number) => void\r\n    getUsers: (pageSize: number, currentPage: number) => void\r\n}\r\nexport type UserResponseType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string | null, large: string | null }\r\n    followed: boolean\r\n}\r\nexport type UsersResponseType = {\r\n    items: Array<UserResponseType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n    totalCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isRequestSendUsersId: number[]\r\n}\r\n\r\nclass UserPageAPIComponent extends React.Component<UsersPageAPIComponentPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers ( this.props.pageSize, this.props.currentPage )\r\n    }//axios request with fetching and setUsers\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeCurrentPage ( pageNumber )\r\n        this.props.getUsers ( this.props.pageSize, pageNumber )\r\n\r\n    } //axios request with fetching and setUsers\r\n\r\n    render() {\r\n        return <>{ this.props.isFetching\r\n            ? <Preloader/>\r\n            : <Users emptyPhoto={ emptyPhoto }\r\n                     users={ this.props.users }\r\n                     totalCount={ this.props.totalCount }\r\n                     followCallBack={ this.props.followCallBack }\r\n                     unFollowCallBack={ this.props.unFollowCallBack }\r\n                     onPageChanged={ this.onPageChanged }\r\n                     currentPage={ this.props.currentPage }\r\n                     pageSize={ this.props.pageSize }\r\n                     isRequestSendUsersId={ this.props.isRequestSendUsersId }\r\n            /> }</>\r\n    }\r\n} //class container for USERS\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        totalCount: state.usersReducer.totalCount,\r\n        pageSize: state.usersReducer.pageSize,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        isRequestSendUsersId: state.usersReducer.isRequestSendUsersId\r\n\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType> (\r\n    connect ( mapStateToProps, {\r\n        followCallBack: followUserTC,\r\n        unFollowCallBack: unFollowUserTC,\r\n        changeCurrentPage: actionsUsers.changeCurrentPageActionCreator,\r\n        getUsers: getUsersTC\r\n    } ),\r\n    //withAuthRedirect\r\n)(UserPageAPIComponent)"],"sourceRoot":""}