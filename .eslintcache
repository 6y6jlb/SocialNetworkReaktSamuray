[{"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx":"1","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.tsx":"2","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\StoreContext.tsx":"3","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx":"4","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx":"5","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx":"6","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx":"7","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx":"8","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx":"9","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx":"10","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx":"11","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx":"12","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx":"13","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx":"14","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx":"15","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx":"16","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx":"17","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx":"18","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx":"19","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx":"20","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx":"21","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx":"22","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendListr.tsx":"23","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx":"24","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx":"25"},{"size":564,"mtime":1616331569403,"results":"26","hashOfConfig":"27"},{"size":1082,"mtime":1616330707751,"results":"28","hashOfConfig":"27"},{"size":469,"mtime":1616332380871,"results":"29","hashOfConfig":"27"},{"size":784,"mtime":1616338542423,"results":"30","hashOfConfig":"27"},{"size":396,"mtime":1616327461900,"results":"31","hashOfConfig":"27"},{"size":2520,"mtime":1616337976327,"results":"32","hashOfConfig":"27"},{"size":245,"mtime":1612364552499,"results":"33","hashOfConfig":"27"},{"size":135,"mtime":1612641360484,"results":"34","hashOfConfig":"27"},{"size":2921,"mtime":1616337263900,"results":"35","hashOfConfig":"27"},{"size":1754,"mtime":1616253197185,"results":"36","hashOfConfig":"27"},{"size":1330,"mtime":1616249642820,"results":"37","hashOfConfig":"27"},{"size":1066,"mtime":1616337976452,"results":"38","hashOfConfig":"27"},{"size":877,"mtime":1616338304083,"results":"39","hashOfConfig":"27"},{"size":783,"mtime":1616338454090,"results":"40","hashOfConfig":"27"},{"size":1600,"mtime":1616337582147,"results":"41","hashOfConfig":"27"},{"size":967,"mtime":1616340088928,"results":"42","hashOfConfig":"27"},{"size":563,"mtime":1616338506181,"results":"43","hashOfConfig":"27"},{"size":845,"mtime":1616337976387,"results":"44","hashOfConfig":"27"},{"size":3734,"mtime":1616338304033,"results":"45","hashOfConfig":"27"},{"size":760,"mtime":1616338304200,"results":"46","hashOfConfig":"27"},{"size":2236,"mtime":1616337481965,"results":"47","hashOfConfig":"27"},{"size":790,"mtime":1616338304307,"results":"48","hashOfConfig":"27"},{"size":157,"mtime":1617010751784,"results":"49","hashOfConfig":"27"},{"size":214,"mtime":1612379772400,"results":"50","hashOfConfig":"27"},{"size":1448,"mtime":1616249643076,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kgnlhf",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx",["105"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\StoreContext.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx",[],["106","107"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx",["108"],"import React from 'react';\r\nimport {DialogsWrapper} from \"./DialogsWrapper\";\r\nimport {\r\n    addDialogsMessageActionCreator,\r\n    changeDialogsInputActionCreator,\r\n    InitialStateDialogsType\r\n} from \"../../../Redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\n\r\n\r\n/*export function DialogsWrapperContainer(props: any) {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                store =>\r\n                {\r\n                    let state: any;\r\n                    state = store.getState();\r\n                    function onAddPost() {\r\n                        const trimmedMessage = state.dialogsReducer.currentInputMessageString.trim()\r\n                        if (trimmedMessage) {\r\n                            store.dispatch(addDialogsMessageActionCreator(true))\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        } else {\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        }\r\n                    }\r\n\r\n                    function onPostChange(text: string) {\r\n                        store.dispatch(changeDialogsInputActionCreator(text))\r\n                    }\r\n\r\n                    return <DialogsWrapper onAddPost={onAddPost} onPostChanger={onPostChange}\r\n                                           messages={state.dialogsReducer.messages}\r\n                                           currentInputMessageString={state.dialogsReducer.currentInputMessageString}/>\r\n                }\r\n            }\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\n\r\ntype MapStateToPropsType = InitialStateDialogsType\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    onPostChanger: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messages: state.dialogsReducer.messages,\r\n        currentInputMessageString: state.dialogsReducer.currentInputMessageString\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addDialogsMessageActionCreator(true))\r\n            dispatch(changeDialogsInputActionCreator(''))\r\n            /*const trimmedMessage = state.currentInputMessageString.trim()\r\n            if (trimmedMessage) {\r\n                dispatch(addDialogsMessageActionCreator(true))\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            } else {\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            }*/\r\n        },\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changeDialogsInputActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWrapper)\r\nexport default DialogsWrapperContainer;\r\n\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx",["109"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx",["110"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx",["111"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx",["112","113"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx",["114"],"import s from \"./MyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function MyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message} key={props.id}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n                <div className={s.cornet}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendListr.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx",[],{"ruleId":"115","severity":1,"message":"116","line":4,"column":9,"nodeType":"117","messageId":"118","endLine":4,"endColumn":31},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":23,"column":21,"nodeType":"126","endLine":23,"endColumn":80},{"ruleId":"124","severity":1,"message":"125","line":10,"column":39,"nodeType":"126","endLine":10,"endColumn":93},{"ruleId":"124","severity":1,"message":"125","line":12,"column":17,"nodeType":"126","endLine":12,"endColumn":58},{"ruleId":"115","severity":1,"message":"123","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":59,"column":5,"nodeType":"117","messageId":"129","endLine":59,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":10,"column":39,"nodeType":"126","endLine":10,"endColumn":93},"@typescript-eslint/no-unused-vars","'InitialStateNavBarType' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"'React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]