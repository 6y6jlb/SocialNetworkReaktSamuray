[{"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx":"1","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.tsx":"2","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.tsx":"3","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.container.tsx":"4","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx":"5","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx":"6","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx":"7","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx":"8","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx":"9","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx":"10","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx":"11","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx":"12","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx":"13","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx":"14","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx":"15","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx":"16","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx":"17","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx":"18","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx":"19","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx":"20","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts":"21","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx":"22"},{"size":1709,"mtime":1617042835710,"results":"23","hashOfConfig":"24"},{"size":4244,"mtime":1617044086977,"results":"25","hashOfConfig":"24"},{"size":1055,"mtime":1617044998902,"results":"26","hashOfConfig":"24"},{"size":1061,"mtime":1617044502198,"results":"27","hashOfConfig":"24"},{"size":784,"mtime":1616338542423,"results":"28","hashOfConfig":"24"},{"size":1129,"mtime":1617040354654,"results":"29","hashOfConfig":"24"},{"size":3734,"mtime":1616338304033,"results":"30","hashOfConfig":"24"},{"size":137,"mtime":1612641360234,"results":"31","hashOfConfig":"24"},{"size":2236,"mtime":1616337481965,"results":"32","hashOfConfig":"24"},{"size":1760,"mtime":1616338304133,"results":"33","hashOfConfig":"24"},{"size":805,"mtime":1612975667218,"results":"34","hashOfConfig":"24"},{"size":214,"mtime":1612379772400,"results":"35","hashOfConfig":"24"},{"size":877,"mtime":1616338304083,"results":"36","hashOfConfig":"24"},{"size":783,"mtime":1616338454090,"results":"37","hashOfConfig":"24"},{"size":2923,"mtime":1617043271065,"results":"38","hashOfConfig":"24"},{"size":365,"mtime":1614970960567,"results":"39","hashOfConfig":"24"},{"size":967,"mtime":1616340088928,"results":"40","hashOfConfig":"24"},{"size":1066,"mtime":1616337976452,"results":"41","hashOfConfig":"24"},{"size":760,"mtime":1616338304200,"results":"42","hashOfConfig":"24"},{"size":790,"mtime":1616338304307,"results":"43","hashOfConfig":"24"},{"size":425,"mtime":1612275610883,"results":"44","hashOfConfig":"24"},{"size":1330,"mtime":1616249642820,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1kgnlhf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx",[],["97","98"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.container.tsx",["99"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FriendList from \"./FriendList\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\nimport {followActionCreator, InitialStateUsersType, unFollowActionCreator} from \"../../../Redux/usersReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users:state.usersReducer\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): MapDispatchToPropsType {\r\n    return {\r\n        followCallBack: (id: number) => {\r\n            dispatch(followActionCreator(id))\r\n        },\r\n        unFollowCallBack: (id: number) => {\r\n            dispatch(unFollowActionCreator(id))\r\n        },\r\n    }\r\n}\r\n\r\nconst FriendListContainer = connect(mapStateToProps, mapDispatchToProps)(FriendList)\r\nexport default FriendListContainer;","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx",[],["100","101"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx",["102","103"],"import React from \"react\";\r\nimport {ProfileWrapper} from \"./ProfileWrapper\";\r\nimport {\r\n    addPostActionCreator,\r\n    changePostInputActionCreator,\r\n    InitialStateProfileType\r\n} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n/*\r\ntype ProfileWrapperContainerPropsType = {\r\n    state: RootStateType\r\n    dispatch: (action: ActionsTypes) => void\r\n\r\n}\r\n\r\nexport function ProfileWrapperContainer(props:any) {\r\n\r\n    return <StoreContext.Consumer>\r\n        {(store) =>\r\n        {\r\n            const state = store.getState()\r\n            function onAddPost() {\r\n                const trimmedPost = state.profileReducer.currentInputPost.trim()\r\n                if (trimmedPost) {\r\n                    store.dispatch(addPostActionCreator())\r\n                    store.dispatch(changePostInputActionCreator(''))\r\n                } else {\r\n                    store.dispatch(changePostInputActionCreator(''))\r\n                }\r\n            }\r\n\r\n            function onPostChanger(text: string) {\r\n                store.dispatch(changePostInputActionCreator(text))\r\n            }\r\n\r\n\r\n            return <ProfileWrapper onPostChanger={onPostChanger} onAddPost={onAddPost}\r\n                                   profileWrapperObj={state.profileReducer}/>\r\n        }}\r\n    </StoreContext.Consumer>\r\n\r\n}\r\n\r\n*/\r\n\r\ntype mapStateToProps = {\r\n    profileWrapperObj: InitialStateProfileType\r\n}\r\ntype MapDispatchToProps = {\r\n    onPostChanger: (text: string) => void\r\n    onAddPost: () => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToProps => {\r\n    return {\r\n        profileWrapperObj: state.profileReducer\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchToProps => {\r\n    return {\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changePostInputActionCreator(text))\r\n        },\r\n        onAddPost: () => {\r\n            dispatch(addPostActionCreator())\r\n            dispatch(changePostInputActionCreator(''))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProfileWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(ProfileWrapper);\r\nexport default ProfileWrapperContainer;\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx",["104"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx",["105"],"import s from \"./NotMyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function NotMyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.cornet}></div>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx",["106"],"import React from 'react';\r\nimport {DialogsWrapper} from \"./DialogsWrapper\";\r\nimport {\r\n    addDialogsMessageActionCreator,\r\n    changeDialogsInputActionCreator,\r\n    InitialStateDialogsType\r\n} from \"../../../Redux/dialogsReducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\n\r\n\r\n/*export function DialogsWrapperContainer(props: any) {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                store =>\r\n                {\r\n                    let state: any;\r\n                    state = store.getState();\r\n                    function onAddPost() {\r\n                        const trimmedMessage = state.dialogsReducer.currentInputMessageString.trim()\r\n                        if (trimmedMessage) {\r\n                            store.dispatch(addDialogsMessageActionCreator(true))\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        } else {\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        }\r\n                    }\r\n\r\n                    function onPostChange(text: string) {\r\n                        store.dispatch(changeDialogsInputActionCreator(text))\r\n                    }\r\n\r\n                    return <DialogsWrapper onAddPost={onAddPost} onPostChanger={onPostChange}\r\n                                           messages={state.dialogsReducer.messages}\r\n                                           currentInputMessageString={state.dialogsReducer.currentInputMessageString}/>\r\n                }\r\n            }\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\n\r\ntype MapStateToPropsType = InitialStateDialogsType\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    onPostChanger: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messages: state.dialogsReducer.messages,\r\n        currentInputMessageString: state.dialogsReducer.currentInputMessageString\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addDialogsMessageActionCreator(true))\r\n            dispatch(changeDialogsInputActionCreator(''))\r\n            /*const trimmedMessage = state.currentInputMessageString.trim()\r\n            if (trimmedMessage) {\r\n                dispatch(addDialogsMessageActionCreator(true))\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            } else {\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            }*/\r\n        },\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changeDialogsInputActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWrapper)\r\nexport default DialogsWrapperContainer;\r\n\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx",["107"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx",["108"],"import s from \"./MyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function MyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message} key={props.id}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n                <div className={s.cornet}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":59,"column":5,"nodeType":"115","messageId":"121","endLine":59,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":24,"column":21,"nodeType":"124","endLine":24,"endColumn":80},{"ruleId":"122","severity":1,"message":"123","line":10,"column":39,"nodeType":"124","endLine":10,"endColumn":93},{"ruleId":"113","severity":1,"message":"114","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":8,"column":39,"nodeType":"124","endLine":8,"endColumn":61},{"ruleId":"122","severity":1,"message":"123","line":10,"column":39,"nodeType":"124","endLine":10,"endColumn":93},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["125"],["126"],"@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]