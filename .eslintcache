[{"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx":"1","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\common\\preloader\\Preloader.tsx":"2","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx":"3","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx":"4","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx":"5","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx":"6","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts":"7","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx":"8","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx":"9","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx":"10","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx":"11","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx":"12","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx":"13","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\UserPage\\UsersPage.tsx":"14","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx":"15","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx":"16","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx":"17","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx":"18","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.ts":"19","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.ts":"20","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\UserPage\\UserPage.container.tsx":"21","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.ts":"22","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\auth-reducer.tsx":"23","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx":"24","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx":"25","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileHeader\\ProfileHeader.tsx":"26","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx":"27","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\HeaderContainer.tsx":"28","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.ts":"29","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx":"30","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\api\\api.ts":"31","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Settings\\Settings.tsx":"32","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.tsx":"33","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx":"34","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx":"35","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx":"36","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx":"37","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\common\\login\\Login.tsx":"38"},{"size":527,"mtime":1618503842068,"results":"39","hashOfConfig":"40"},{"size":321,"mtime":1617947813996,"results":"41","hashOfConfig":"40"},{"size":346,"mtime":1618508449240,"results":"42","hashOfConfig":"40"},{"size":603,"mtime":1618078498216,"results":"43","hashOfConfig":"40"},{"size":783,"mtime":1616338454090,"results":"44","hashOfConfig":"40"},{"size":784,"mtime":1616338542423,"results":"45","hashOfConfig":"40"},{"size":425,"mtime":1612275610883,"results":"46","hashOfConfig":"40"},{"size":2619,"mtime":1617976851041,"results":"47","hashOfConfig":"40"},{"size":1689,"mtime":1619288371130,"results":"48","hashOfConfig":"40"},{"size":137,"mtime":1612641360234,"results":"49","hashOfConfig":"40"},{"size":2923,"mtime":1617043271065,"results":"50","hashOfConfig":"40"},{"size":1777,"mtime":1618508449274,"results":"51","hashOfConfig":"40"},{"size":1164,"mtime":1619288720751,"results":"52","hashOfConfig":"40"},{"size":4271,"mtime":1619285606953,"results":"53","hashOfConfig":"40"},{"size":628,"mtime":1618078498133,"results":"54","hashOfConfig":"40"},{"size":1219,"mtime":1618723979276,"results":"55","hashOfConfig":"40"},{"size":790,"mtime":1616338304307,"results":"56","hashOfConfig":"40"},{"size":1389,"mtime":1619287503065,"results":"57","hashOfConfig":"40"},{"size":2095,"mtime":1619115730686,"results":"58","hashOfConfig":"40"},{"size":6952,"mtime":1619275672251,"results":"59","hashOfConfig":"40"},{"size":4684,"mtime":1619205030811,"results":"60","hashOfConfig":"40"},{"size":5738,"mtime":1619275672310,"results":"61","hashOfConfig":"40"},{"size":1496,"mtime":1619275672184,"results":"62","hashOfConfig":"40"},{"size":135,"mtime":1612641360484,"results":"63","hashOfConfig":"40"},{"size":2802,"mtime":1619286699257,"results":"64","hashOfConfig":"40"},{"size":1521,"mtime":1618239114614,"results":"65","hashOfConfig":"40"},{"size":1118,"mtime":1619287996401,"results":"66","hashOfConfig":"40"},{"size":2287,"mtime":1619275086600,"results":"67","hashOfConfig":"40"},{"size":1092,"mtime":1617976850974,"results":"68","hashOfConfig":"40"},{"size":245,"mtime":1612364552499,"results":"69","hashOfConfig":"40"},{"size":2111,"mtime":1619275303539,"results":"70","hashOfConfig":"40"},{"size":135,"mtime":1612641360392,"results":"71","hashOfConfig":"40"},{"size":1270,"mtime":1618508449332,"results":"72","hashOfConfig":"40"},{"size":805,"mtime":1612975667218,"results":"73","hashOfConfig":"40"},{"size":655,"mtime":1618506600365,"results":"74","hashOfConfig":"40"},{"size":877,"mtime":1616338304083,"results":"75","hashOfConfig":"40"},{"size":996,"mtime":1619276386203,"results":"76","hashOfConfig":"40"},{"size":172,"mtime":1619288511636,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1kgnlhf",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx",[],["167","168"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\common\\preloader\\Preloader.tsx",[],["169","170"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx",["171"],"import s from \"./NotMyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function NotMyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.cornet}></div>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx",[],["172","173"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx",["174"],"import React from 'react';\r\nimport {DialogsWrapper} from \"./DialogsWrapper\";\r\nimport {\r\n    addDialogsMessageActionCreator,\r\n    changeDialogsInputActionCreator,\r\n    InitialStateDialogsType\r\n} from \"../../../Redux/dialogsReducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\n\r\n\r\n/*export function DialogsWrapperContainer(props: any) {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                store =>\r\n                {\r\n                    let state: any;\r\n                    state = store.getState();\r\n                    function onAddPost() {\r\n                        const trimmedMessage = state.dialogsReducer.currentInputMessageString.trim()\r\n                        if (trimmedMessage) {\r\n                            store.dispatch(addDialogsMessageActionCreator(true))\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        } else {\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        }\r\n                    }\r\n\r\n                    function onPostChange(text: string) {\r\n                        store.dispatch(changeDialogsInputActionCreator(text))\r\n                    }\r\n\r\n                    return <DialogsWrapper onAddPost={onAddPost} onPostChanger={onPostChange}\r\n                                           messages={state.dialogsReducer.messages}\r\n                                           currentInputMessageString={state.dialogsReducer.currentInputMessageString}/>\r\n                }\r\n            }\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\n\r\ntype MapStateToPropsType = InitialStateDialogsType\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    onPostChanger: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messages: state.dialogsReducer.messages,\r\n        currentInputMessageString: state.dialogsReducer.currentInputMessageString\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addDialogsMessageActionCreator(true))\r\n            dispatch(changeDialogsInputActionCreator(''))\r\n            /*const trimmedMessage = state.currentInputMessageString.trim()\r\n            if (trimmedMessage) {\r\n                dispatch(addDialogsMessageActionCreator(true))\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            } else {\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            }*/\r\n        },\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changeDialogsInputActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWrapper)\r\nexport default DialogsWrapperContainer;\r\n\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx",["175"],"import React, {Component} from 'react';\r\nimport {NavigationBar} from \"./NavigationBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    FriendIconsFromNAvBArType,\r\n    InitialStateNavBarType,\r\n    NavLinkBarFromNAvBArType\r\n} from \"../../../Redux/navBarReducer\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n/*export function NavigationBarContainer() {\r\nreturn (\r\n    <StoreContext.Consumer>\r\n        {store=>\r\n            {\r\n                const state = store.getState()\r\n                return <NavigationBar navLinkBar={state.navLinkBar}\r\n                                      friendsIcons={state.friendsIcons}/>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n)\r\n}*/\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    friendsIcons:Array<FriendIconsFromNAvBArType>\r\n    navLinkBar: Array<NavLinkBarFromNAvBArType>\r\n    profileName:string|null\r\n}\r\ntype MapDispatchToProps = {}\r\ntype NavigationBarAPIContainerPropsType = MapStateToPropsType&MapDispatchToProps\r\n\r\n\r\n\r\n\r\nclass NavigationBarAPIContainer extends Component<NavigationBarAPIContainerPropsType> {\r\n    render() {\r\n        return <NavigationBar navLinkBar={this.props.navLinkBar} friendsIcons={this.props.friendsIcons} profileName={this.props.profileName}/>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        navLinkBar: state.navBarReducer.navLinkBar,\r\n        friendsIcons: state.navBarReducer.friendsIcons,\r\n        profileName:state.auth.data.login\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {}\r\n}\r\n\r\nconst NavigationBarContainer = connect ( mapStateToProps, mapDispatchToProps ) ( NavigationBarAPIContainer )\r\nexport default NavigationBarContainer;\r\n",["176","177"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\UserPage\\UsersPage.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx",["178"],"import s from \"./MyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function MyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message} key={props.id}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n                <div className={s.cornet}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.ts",["179"],"import {applyMiddleware,combineReducers, createStore,compose} from 'redux'\r\nimport profileReducer, {\r\n    addPostActionCreator,\r\n    changeIsFetchingFromProfileActionCreator,\r\n    changePostInputActionCreator,\r\n    setUserProfileActionCreator\r\n} from \"./profileReducer\";\r\nimport dialogsReducer, {addDialogsMessageActionCreator, changeDialogsInputActionCreator} from \"./dialogsReducer\";\r\nimport navBarReducer from \"./navBarReducer\";\r\nimport usersReducer, {addMoreUsersActionCreator, changeCurrentPageActionCreator,\r\n    changeIsFetchingActionCreator, changeTotalCountActionCreator,\r\n    followActionCreator, sendRequestFromFollowUnFollowActionCreator, unFollowActionCreator} from \"./usersReducer\";\r\nimport authReducer, {setUserDataActionCreator} from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nexport type ActionsTypes =\r\n    ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof addDialogsMessageActionCreator>\r\n    | ReturnType<typeof changePostInputActionCreator>\r\n    | ReturnType<typeof changeDialogsInputActionCreator>\r\n    | ReturnType<typeof followActionCreator>\r\n    | ReturnType<typeof unFollowActionCreator>\r\n    | ReturnType<typeof addMoreUsersActionCreator>\r\n    | ReturnType<typeof changeCurrentPageActionCreator>\r\n    | ReturnType<typeof changeTotalCountActionCreator>\r\n    | ReturnType<typeof changeIsFetchingActionCreator>\r\n    | ReturnType<typeof setUserProfileActionCreator>\r\n    | ReturnType<typeof setUserDataActionCreator>\r\n    | ReturnType<typeof sendRequestFromFollowUnFollowActionCreator>\r\n    | ReturnType<typeof changeIsFetchingFromProfileActionCreator>\r\n\r\n\r\nconst rootReducer = combineReducers ( {\r\n    profileReducer,\r\n    dialogsReducer,\r\n    navBarReducer,\r\n    usersReducer,\r\n    auth:authReducer\r\n\r\n} );\r\n\r\n\r\nexport type RootReducersType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\nlet store = createStore ( rootReducer,applyMiddleware(thunkMiddleware));\r\n//(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(), need to fix\r\n\r\nexport default store;\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\UserPage\\UserPage.container.tsx",["180","181","182","183"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {\r\n    addMoreUsersActionCreator,\r\n    changeCurrentPageActionCreator,\r\n    changeIsFetchingActionCreator,\r\n    changeTotalCountActionCreator,\r\n    followUserTC,\r\n    getUsersTC,\r\n    InitialStateUsersType,\r\n    sendRequestFromFollowUnFollowActionCreator,\r\n    unFollowUserTC,\r\n    UserType\r\n} from \"../../../Redux/usersReducer\";\r\nimport Users from \"./UsersPage\";\r\nimport emptyPhoto from '../../../images/emptyUser.png'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\ntype UsersPageAPIComponentPropsType = {\r\n    users: UserType[]\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isRequestSendUsersId: number[]\r\n    followCallBack: (id: number) => void\r\n    unFollowCallBack: (id: number) => void\r\n    changeCurrentPage: (currentPage: number) => void\r\n    getUsers: (pageSize: number, currentPage: number) => void\r\n}\r\nexport type UserResponseType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: { small: string | null, large: string | null }\r\n    followed: boolean\r\n}\r\nexport type UsersResponseType = {\r\n    items: Array<UserResponseType>\r\n    totalCount: number\r\n    error: string\r\n}\r\ntype MapStateToPropsType = {\r\n    users: InitialStateUsersType\r\n    totalCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    isRequestSendUsersId: number[]\r\n}\r\n\r\nclass UserPageAPIComponent extends React.Component<UsersPageAPIComponentPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers ( this.props.pageSize, this.props.currentPage )\r\n        /*this.props.changeIsFetching ( true )\r\n\r\n        UsersAPI.getUsers ( this.props.pageSize, this.props.currentPage ).then ( response => {\r\n            this.props.changeIsFetching ( false )\r\n            this.props.changeTotalCount ( response.data.totalCount > 20 ? 20 : response.data.totalCount )\r\n            this.props.setUsers ( response.data.items )\r\n        } );*///without thunk\r\n    }//axios request with fetching and setUsers\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.changeCurrentPage ( pageNumber )\r\n        this.props.getUsers ( this.props.pageSize, pageNumber )\r\n        /*\r\n          this.props.changeIsFetching ( true )\r\n          this.props.changeCurrentPage ( pageNumber )\r\n          UsersAPI.getUsers ( this.props.pageSize, this.props.currentPage ).then ( response => {\r\n                  this.props.changeTotalCount ( response.data.totalCount > 20 ? 20 : response.data.totalCount )\r\n                  this.props.setUsers ( response.data.items )\r\n                  this.props.changeIsFetching ( false )\r\n              }\r\n          )*///without thunk\r\n    } //axios request with fetching and setUsers\r\n\r\n    render() {\r\n        return <>{ this.props.isFetching ? <Preloader/> : <Users emptyPhoto={ emptyPhoto }\r\n                                                                 users={ this.props.users }\r\n                                                                 totalCount={ this.props.totalCount }\r\n                                                                 followCallBack={ this.props.followCallBack }\r\n                                                                 unFollowCallBack={ this.props.unFollowCallBack }\r\n                                                                 onPageChanged={ this.onPageChanged }\r\n                                                                 currentPage={ this.props.currentPage }\r\n                                                                 pageSize={ this.props.pageSize }\r\n                                                                 isRequestSendUsersId={ this.props.isRequestSendUsersId }\r\n                                                                 /> }</>\r\n    }\r\n} //class container for USERS\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        totalCount: state.usersReducer.totalCount,\r\n        pageSize: state.usersReducer.pageSize,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        isRequestSendUsersId: state.usersReducer.isRequestSendUsersId\r\n\r\n    }\r\n}\r\n\r\nconst UserPageContainer = connect ( mapStateToProps, {\r\n    followCallBack: followUserTC,\r\n    unFollowCallBack: unFollowUserTC,\r\n    changeCurrentPage: changeCurrentPageActionCreator,\r\n    getUsers: getUsersTC\r\n} ) ( UserPageAPIComponent ) //without mapDispatch\r\n\r\nexport default UserPageContainer;","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\auth-reducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileHeader\\ProfileHeader.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\HeaderContainer.tsx",["184"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\api\\api.ts",["185"],"import axios from \"axios\";\r\nimport {UsersResponseType} from \"../components/MainWrapper/UserPage/UserPage.container\";\r\nimport {UserFromProfileResponseType} from \"../Redux/profileReducer\";\r\nimport {SetUserDataType, UserDataFromAuthAuthType} from \"../Redux/auth-reducer\";\r\n\r\ntype FollowUserResponseType = {\r\n    resultCode:number\r\n    messages: string[]\r\n    data:Object\r\n}\r\ninterface ResponseHeaderContainerType extends SetUserDataType{\r\n    fieldsErrors: any\r\n    messages: string\r\n    resultCode: number\r\n}\r\n\r\n\r\nconst instanceForGetUsersSamuraiAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\"\r\n\r\n})\r\nconst instanceForUnFollowUserAndFollowUserSamuraiAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers:{\r\n        \"API-KEY\":'3d2dd236-488d-443e-9eb7-ae8a6831eb76'\r\n    }\r\n\r\n})\r\nconst instanceForProfileSamuraiAPI = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\nconst instanceForAuthSamuraiAPI = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers:(pageSize:number,currentPage:number) =>{\r\n        return instanceForGetUsersSamuraiAPI.get<UsersResponseType> ( `users/?count=${pageSize }&page=${currentPage }`,\r\n        )\r\n    },\r\n    unFollowUser:(userId:number) =>{\r\n        return instanceForUnFollowUserAndFollowUserSamuraiAPI.delete<FollowUserResponseType> ( `follow/${userId}`,\r\n        )\r\n    },\r\n    followUser:(userId:number) =>{\r\n        return instanceForUnFollowUserAndFollowUserSamuraiAPI.post<FollowUserResponseType> ( `follow/${userId}`,\r\n        )\r\n    }\r\n}\r\nexport const ProfileAPI = {\r\n    setUserProfile:(userIdForURL:number) => {\r\n        return instanceForProfileSamuraiAPI.get<UserFromProfileResponseType> ( `profile/${ userIdForURL }` )\r\n    }\r\n}\r\nexport const AuthAPI = {\r\n    setUserFromHeader () {\r\n        return instanceForAuthSamuraiAPI.get<ResponseHeaderContainerType> ( `auth/me`,{\r\n        } )\r\n            },\r\n    }","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Settings\\Settings.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.tsx",["186"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './NavigationBar.module.css'\r\nimport {SmallInfo} from \"./SmallInfo/SmallInfo\";\r\nimport {FriendIconsFromNAvBArType, NavLinkBarFromNAvBArType} from \"../../../Redux/navBarReducer\";\r\n\r\n\r\n\r\ntype NavBarPropsType = {\r\n    navLinkBar: Array<NavLinkBarFromNAvBArType>\r\n    friendsIcons: Array<FriendIconsFromNAvBArType>\r\n    profileName:string|null\r\n}\r\n\r\nexport function NavigationBar({navLinkBar, friendsIcons,profileName}: NavBarPropsType) {\r\n\r\n    const navLinkBlock = navLinkBar.map(i => {\r\n        return <div key={i.id}>\r\n            <NavLink to={i.item}>{i.item}</NavLink>\r\n        </div>\r\n    })\r\n    const friendsIconsBlock = friendsIcons.map(f => {\r\n        return <div key={f.id} className={s.iconBlock}>\r\n            <div className={s.backGroundBlock}><img src={f.photoUrl}/></div>\r\n\r\n            <span>{f.name}</span>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div className={s.navigationBar}>\r\n            <SmallInfo profileName={profileName}/>\r\n            <div className={s.NavElements}>\r\n                {navLinkBlock}\r\n            </div>\r\n            <div className={s.activeFriends}>\r\n                {friendsIconsBlock}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx",["187"],"import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport imageLogo from '../../images/5a3a185132ceb1.89894673151375675320812609.png'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype HeaderPropsType ={\r\n    isAuth:boolean\r\n    login:string|null\r\n}\r\n\r\nexport const Header = (props:HeaderPropsType) => (\r\n    <header className={ s.wrapperHeader }>\r\n        <div className={ s.circle }><img src={ imageLogo }/></div>\r\n        <div className={ s.headerString }>Header</div>\r\n        <div className={ s.loginBlock }>\r\n            <NavLink to={ '/login' }>{ props.isAuth ?props.login :'Login' }</NavLink>\r\n        </div>\r\n\r\n    </header>\r\n);\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\common\\login\\Login.tsx",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"188","replacedBy":"192"},{"ruleId":"190","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":10,"column":39,"nodeType":"196","endLine":10,"endColumn":93},{"ruleId":"188","replacedBy":"197"},{"ruleId":"190","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"203","line":6,"column":5,"nodeType":"201","messageId":"202","endLine":6,"endColumn":27},{"ruleId":"188","replacedBy":"204"},{"ruleId":"190","replacedBy":"205"},{"ruleId":"194","severity":1,"message":"195","line":10,"column":39,"nodeType":"196","endLine":10,"endColumn":93},{"ruleId":"199","severity":1,"message":"206","line":1,"column":54,"nodeType":"201","messageId":"202","endLine":1,"endColumn":61},{"ruleId":"199","severity":1,"message":"207","line":5,"column":5,"nodeType":"201","messageId":"202","endLine":5,"endColumn":30},{"ruleId":"199","severity":1,"message":"208","line":7,"column":5,"nodeType":"201","messageId":"202","endLine":7,"endColumn":34},{"ruleId":"199","severity":1,"message":"209","line":8,"column":5,"nodeType":"201","messageId":"202","endLine":8,"endColumn":34},{"ruleId":"199","severity":1,"message":"210","line":12,"column":5,"nodeType":"201","messageId":"202","endLine":12,"endColumn":47},{"ruleId":"199","severity":1,"message":"211","line":7,"column":9,"nodeType":"201","messageId":"202","endLine":7,"endColumn":16},{"ruleId":"199","severity":1,"message":"212","line":4,"column":26,"nodeType":"201","messageId":"202","endLine":4,"endColumn":50},{"ruleId":"194","severity":1,"message":"195","line":24,"column":48,"nodeType":"196","endLine":24,"endColumn":71},{"ruleId":"194","severity":1,"message":"195","line":13,"column":37,"nodeType":"196","endLine":13,"endColumn":61},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],["213"],["214"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["213"],["214"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'InitialStateNavBarType' is defined but never used.",["213"],["214"],"'compose' is defined but never used.","'addMoreUsersActionCreator' is defined but never used.","'changeIsFetchingActionCreator' is defined but never used.","'changeTotalCountActionCreator' is defined but never used.","'sendRequestFromFollowUnFollowActionCreator' is defined but never used.","'AuthAPI' is defined but never used.","'UserDataFromAuthAuthType' is defined but never used.","no-global-assign","no-unsafe-negation"]