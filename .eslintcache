[{"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx":"1","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.tsx":"2","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.container.tsx":"3","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx":"4","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx":"5","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx":"6","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx":"7","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx":"8","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx":"9","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx":"10","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx":"11","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx":"12","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx":"13","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx":"14","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx":"15","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx":"16","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx":"17","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx":"18","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx":"19","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts":"20","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx":"21","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx":"22","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.tsx":"23","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx":"24","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.tsx":"25","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx":"26","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendListC.tsx":"27","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx":"28","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx":"29","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx":"30","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx":"31","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Settings\\Settings.tsx":"32"},{"size":1709,"mtime":1617042835710,"results":"33","hashOfConfig":"34"},{"size":4388,"mtime":1617376526234,"results":"35","hashOfConfig":"34"},{"size":1275,"mtime":1617376244828,"results":"36","hashOfConfig":"34"},{"size":784,"mtime":1616338542423,"results":"37","hashOfConfig":"34"},{"size":1129,"mtime":1617040354654,"results":"38","hashOfConfig":"34"},{"size":3734,"mtime":1616338304033,"results":"39","hashOfConfig":"34"},{"size":137,"mtime":1612641360234,"results":"40","hashOfConfig":"34"},{"size":2236,"mtime":1616337481965,"results":"41","hashOfConfig":"34"},{"size":1760,"mtime":1616338304133,"results":"42","hashOfConfig":"34"},{"size":805,"mtime":1612975667218,"results":"43","hashOfConfig":"34"},{"size":214,"mtime":1612379772400,"results":"44","hashOfConfig":"34"},{"size":877,"mtime":1616338304083,"results":"45","hashOfConfig":"34"},{"size":783,"mtime":1616338454090,"results":"46","hashOfConfig":"34"},{"size":2923,"mtime":1617043271065,"results":"47","hashOfConfig":"34"},{"size":365,"mtime":1614970960567,"results":"48","hashOfConfig":"34"},{"size":967,"mtime":1616340088928,"results":"49","hashOfConfig":"34"},{"size":1066,"mtime":1616337976452,"results":"50","hashOfConfig":"34"},{"size":760,"mtime":1616338304200,"results":"51","hashOfConfig":"34"},{"size":790,"mtime":1616338304307,"results":"52","hashOfConfig":"34"},{"size":425,"mtime":1612275610883,"results":"53","hashOfConfig":"34"},{"size":1330,"mtime":1616249642820,"results":"54","hashOfConfig":"34"},{"size":245,"mtime":1612364552499,"results":"55","hashOfConfig":"34"},{"size":1094,"mtime":1616334337215,"results":"56","hashOfConfig":"34"},{"size":1165,"mtime":1616337495922,"results":"57","hashOfConfig":"34"},{"size":1203,"mtime":1616338304258,"results":"58","hashOfConfig":"34"},{"size":563,"mtime":1616338506181,"results":"59","hashOfConfig":"34"},{"size":2377,"mtime":1617376453528,"results":"60","hashOfConfig":"34"},{"size":2520,"mtime":1616337976327,"results":"61","hashOfConfig":"34"},{"size":1448,"mtime":1616249643076,"results":"62","hashOfConfig":"34"},{"size":396,"mtime":1616327461900,"results":"63","hashOfConfig":"34"},{"size":135,"mtime":1612641360484,"results":"64","hashOfConfig":"34"},{"size":135,"mtime":1612641360392,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1kgnlhf",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\MainWrapper.tsx",[],["145","146"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\usersReducer.tsx",["147"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendList.container.tsx",["148"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\index.tsx",[],["149","150"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\reduxStore.tsx",[],["151","152"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\profileReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\AudioPage\\AudioPage.tsx",[],["153","154"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.container.tsx",["155","156"],"import React from \"react\";\r\nimport {ProfileWrapper} from \"./ProfileWrapper\";\r\nimport {\r\n    addPostActionCreator,\r\n    changePostInputActionCreator,\r\n    InitialStateProfileType\r\n} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n/*\r\ntype ProfileWrapperContainerPropsType = {\r\n    state: RootStateType\r\n    dispatch: (action: ActionsTypes) => void\r\n\r\n}\r\n\r\nexport function ProfileWrapperContainer(props:any) {\r\n\r\n    return <StoreContext.Consumer>\r\n        {(store) =>\r\n        {\r\n            const state = store.getState()\r\n            function onAddPost() {\r\n                const trimmedPost = state.profileReducer.currentInputPost.trim()\r\n                if (trimmedPost) {\r\n                    store.dispatch(addPostActionCreator())\r\n                    store.dispatch(changePostInputActionCreator(''))\r\n                } else {\r\n                    store.dispatch(changePostInputActionCreator(''))\r\n                }\r\n            }\r\n\r\n            function onPostChanger(text: string) {\r\n                store.dispatch(changePostInputActionCreator(text))\r\n            }\r\n\r\n\r\n            return <ProfileWrapper onPostChanger={onPostChanger} onAddPost={onAddPost}\r\n                                   profileWrapperObj={state.profileReducer}/>\r\n        }}\r\n    </StoreContext.Consumer>\r\n\r\n}\r\n\r\n*/\r\n\r\ntype mapStateToProps = {\r\n    profileWrapperObj: InitialStateProfileType\r\n}\r\ntype MapDispatchToProps = {\r\n    onPostChanger: (text: string) => void\r\n    onAddPost: () => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToProps => {\r\n    return {\r\n        profileWrapperObj: state.profileReducer\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchToProps => {\r\n    return {\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changePostInputActionCreator(text))\r\n        },\r\n        onAddPost: () => {\r\n            dispatch(addPostActionCreator())\r\n            dispatch(changePostInputActionCreator(''))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst ProfileWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(ProfileWrapper);\r\nexport default ProfileWrapperContainer;\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\ProfileWrapper.tsx",["157"],"import React from \"react\";\r\nimport s from './ProfileWrapper.module.css'\r\nimport {SendMessageAreaFromProfile} from \"./SendMessageAreaFromProfile/SendMessageAreaFromProfile\";\r\nimport {Posts} from \"./Posts/Posts\";\r\nimport {InitialStateProfileType} from \"../../../Redux/profileReducer\";\r\n\r\n\r\n\r\nexport type ProfileWrapperPropsType = {\r\n    onAddPost: () => void\r\n    onPostChanger: (text: string) => void\r\n    profileWrapperObj: InitialStateProfileType\r\n\r\n\r\n}\r\n\r\nexport function ProfileWrapper(props: ProfileWrapperPropsType) {\r\n\r\n\r\n    return (\r\n        <div className={s.profileContent}>\r\n            <div className={s.profileHeader}>\r\n                <div className={s.selfPhotoFromProfile}>\r\n                    <img src={props.profileWrapperObj.profileSelfPhotoImgUrl}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n\r\n                <div></div>\r\n                <div className={s.selfText}>\r\n                    {props.profileWrapperObj.profileInfoText.map(p => {\r\n                        return (\r\n                            <div key={p.id}>\r\n                                -<em>{p.postMessage}</em>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <SendMessageAreaFromProfile onAddPost={props.onAddPost} onPostChanger={props.onPostChanger}\r\n                                        currentInputPost={props.profileWrapperObj.currentInputPost}/>\r\n            <Posts profileInfoText={props.profileWrapperObj.profileInfoText}\r\n                   profileSelfPhotoImgUrl={props.profileWrapperObj.profileSelfPhotoImgUrl}\r\n                   myPostArray={props.profileWrapperObj.myPostArray}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n",["158","159"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\FriendListFromDialogs\\FriendListFromDialogs.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\SmallInfo\\SmallInfo.tsx",[],["160","161"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MessageFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\NotMyMessage\\NotMyMessage.tsx",["162"],"import s from \"./NotMyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function NotMyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.cornet}></div>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.container.tsx",["163"],"import React from 'react';\r\nimport {DialogsWrapper} from \"./DialogsWrapper\";\r\nimport {\r\n    addDialogsMessageActionCreator,\r\n    changeDialogsInputActionCreator,\r\n    InitialStateDialogsType\r\n} from \"../../../Redux/dialogsReducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\n\r\n\r\n/*export function DialogsWrapperContainer(props: any) {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                store =>\r\n                {\r\n                    let state: any;\r\n                    state = store.getState();\r\n                    function onAddPost() {\r\n                        const trimmedMessage = state.dialogsReducer.currentInputMessageString.trim()\r\n                        if (trimmedMessage) {\r\n                            store.dispatch(addDialogsMessageActionCreator(true))\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        } else {\r\n                            store.dispatch(changeDialogsInputActionCreator(''))\r\n                        }\r\n                    }\r\n\r\n                    function onPostChange(text: string) {\r\n                        store.dispatch(changeDialogsInputActionCreator(text))\r\n                    }\r\n\r\n                    return <DialogsWrapper onAddPost={onAddPost} onPostChanger={onPostChange}\r\n                                           messages={state.dialogsReducer.messages}\r\n                                           currentInputMessageString={state.dialogsReducer.currentInputMessageString}/>\r\n                }\r\n            }\r\n\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\n\r\n\r\ntype MapStateToPropsType = InitialStateDialogsType\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    onPostChanger: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messages: state.dialogsReducer.messages,\r\n        currentInputMessageString: state.dialogsReducer.currentInputMessageString\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addDialogsMessageActionCreator(true))\r\n            dispatch(changeDialogsInputActionCreator(''))\r\n            /*const trimmedMessage = state.currentInputMessageString.trim()\r\n            if (trimmedMessage) {\r\n                dispatch(addDialogsMessageActionCreator(true))\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            } else {\r\n                dispatch(changeDialogsInputActionCreator(''))\r\n            }*/\r\n        },\r\n        onPostChanger: (text: string) => {\r\n            dispatch(changeDialogsInputActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(DialogsWrapper)\r\nexport default DialogsWrapperContainer;\r\n\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Header\\Header.tsx",["164"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\DialogsWrapper.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\CurrentDialog.tsx",[],["165","166"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Posts.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\MessageFromCurrentDialog\\MyMessage\\MyMessage.tsx",["167"],"import s from \"./MyMessage.module.css\";\r\nimport React from \"react\";\r\nimport {MessagesFromDialogsType} from \"../../../../../../Redux/dialogsReducer\";\r\n\r\n\r\n\r\nexport function MyMessage(props: MessagesFromDialogsType) {\r\n    return (\r\n        <div className={s.message} key={props.id}>\r\n            <div className={s.avatar}><img className={s.avatarChild} src={props.avatarURL}/></div>\r\n            <div className={s.messageFrame}>\r\n                <div className={s.textFrame}>\r\n                    <div className={s.name}>Random Name</div>\r\n                    <div className={s.textMessage}>{props.item}</div>\r\n                    <div className={s.time}>02.21.22</div>\r\n                </div>\r\n                <div className={s.cornet}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\reportWebVitals.ts",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\SendMessageAreaFromProfile\\SendMessageAreaFromProfile.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\Footer\\Footer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\navBarReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.container.tsx",["168"],"import React from 'react';\r\nimport {NavigationBar} from \"./NavigationBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialStateNavBarType} from \"../../../Redux/navBarReducer\";\r\nimport {AppStateType} from \"../../../Redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\n/*export function NavigationBarContainer() {\r\nreturn (\r\n    <StoreContext.Consumer>\r\n        {store=>\r\n            {\r\n                const state = store.getState()\r\n                return <NavigationBar navLinkBar={state.navLinkBar}\r\n                                      friendsIcons={state.friendsIcons}/>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n)\r\n}*/\r\n\r\ntype MapStateToPropsType = InitialStateNavBarType\r\ntype MapDispatchToProps = {}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        navLinkBar: state.navBarReducer.navLinkBar,\r\n        friendsIcons: state.navBarReducer.friendsIcons\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {}\r\n}\r\n\r\nconst NavigationBarContainer = connect(mapStateToProps, mapDispatchToProps)(NavigationBar)\r\nexport default NavigationBarContainer;\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Navigation\\NavigationBar.tsx",["169"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './NavigationBar.module.css'\r\nimport {SmallInfo} from \"./SmallInfo/SmallInfo\";\r\nimport {FriendIconsFromNAvBArType, NavLinkBarFromNAvBArType} from \"../../../Redux/navBarReducer\";\r\n\r\n\r\n\r\ntype NavBarPropsType = {\r\n    navLinkBar: Array<NavLinkBarFromNAvBArType>\r\n    friendsIcons: Array<FriendIconsFromNAvBArType>\r\n}\r\n\r\nexport function NavigationBar({navLinkBar, friendsIcons}: NavBarPropsType) {\r\n\r\n    const navLinkBlock = navLinkBar.map(i => {\r\n        return <div key={i.id}>\r\n            <NavLink to={i.item}>{i.item}</NavLink>\r\n        </div>\r\n    })\r\n    const friendsIconsBlock = friendsIcons.map(f => {\r\n        return <div key={f.id} className={s.iconBlock}>\r\n            <div className={s.backGroundBlock}><img src={f.photoUrl}/></div>\r\n\r\n            <span>{f.name}</span>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div className={s.navigationBar}>\r\n            <SmallInfo/>\r\n            <div className={s.NavElements}>\r\n                {navLinkBlock}\r\n            </div>\r\n            <div className={s.activeFriends}>\r\n                {friendsIconsBlock}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Profile\\Posts\\Post\\Post.tsx",["170"],"import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\nimport {MyPostArrayFromProfileType} from \"../../../../../Redux/profileReducer\";\r\n\r\n\r\n\r\n\r\nexport function Post(props: MyPostArrayFromProfileType) {\r\n    return (\r\n        <div className={s.profilePost} key={props.id}>\r\n            <div className={s.avatarAndLikes}>\r\n                <img src={props.profileSelfPhotoImgUrl}/>\r\n                <div>likes</div>\r\n            </div>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\FriendList\\FriendListC.tsx",["171"],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\Redux\\dialogsReducer.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\DialogsWrapper\\CurrentDialog\\SendMessageAreaFromCurrentDialog\\SendMessageAreaFromCurrentDialog.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\App.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\NewsFeed\\NewsFeed.tsx",[],"E:\\react\\projects\\02-SocialNetworkTS\\network-app-ts\\src\\components\\MainWrapper\\Settings\\Settings.tsx",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":17},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"172","replacedBy":"181"},{"ruleId":"174","replacedBy":"182"},{"ruleId":"172","replacedBy":"183"},{"ruleId":"174","replacedBy":"184"},{"ruleId":"172","replacedBy":"185"},{"ruleId":"174","replacedBy":"186"},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":59,"column":5,"nodeType":"178","messageId":"189","endLine":59,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":24,"column":21,"nodeType":"192","endLine":24,"endColumn":80},{"ruleId":"172","replacedBy":"193"},{"ruleId":"174","replacedBy":"194"},{"ruleId":"172","replacedBy":"195"},{"ruleId":"174","replacedBy":"196"},{"ruleId":"190","severity":1,"message":"191","line":10,"column":39,"nodeType":"192","endLine":10,"endColumn":93},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":8,"column":39,"nodeType":"192","endLine":8,"endColumn":61},{"ruleId":"172","replacedBy":"197"},{"ruleId":"174","replacedBy":"198"},{"ruleId":"190","severity":1,"message":"191","line":10,"column":39,"nodeType":"192","endLine":10,"endColumn":93},{"ruleId":"176","severity":1,"message":"180","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":23,"column":48,"nodeType":"192","endLine":23,"endColumn":71},{"ruleId":"190","severity":1,"message":"191","line":12,"column":17,"nodeType":"192","endLine":12,"endColumn":58},{"ruleId":"199","severity":1,"message":"200","line":30,"column":5,"nodeType":"201","messageId":"202","endLine":32,"endColumn":6},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"@typescript-eslint/no-unused-vars","'selfPhoto' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.",["203"],["204"],["203"],["204"],["203"],["204"],"@typescript-eslint/no-redeclare","'mapStateToProps' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["203"],["204"],["203"],["204"],["203"],["204"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]